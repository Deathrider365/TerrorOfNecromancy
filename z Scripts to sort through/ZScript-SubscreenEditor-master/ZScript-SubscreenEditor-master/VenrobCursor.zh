#option SHORT_CIRCUIT on
#option HEADER_GUARD on
#include "std.zh"

namespace Venrob
{
	/**
	 * Returns true if the cursor is inside the box defined by (x,y) -> (x2,y2)
	 * Effectively, Point/Rect collision, for the mouse cursor's point.
	 */
	bool CursorBox(int x, int y, int x2, int y2)
	{
		return CursorBox(x, y, x2, y2, 0, 0);
	}
	
	bool CursorBox(int x, int y, int x2, int y2, int xoffs, int yoffs)
	{
		return Input->Mouse[MOUSE_X] + xoffs >= x && Input->Mouse[MOUSE_X] + xoffs <= x2
			&& Input->Mouse[MOUSE_Y] + yoffs >= y && Input->Mouse[MOUSE_Y] + yoffs <= y2;
	}
	
	/**
	 * Returns true if the cursor is inside the circle defined by (x,y), radius.
	 */
	bool CursorRadius(int x, int y, int radius)
	{
		return CursorRadius(x, y, radius, 0, 0);
	}
	
	bool CursorRadius(int x, int y, int radius, int xoffs, int yoffs)
	{
		float tx = (x-(Input->Mouse[MOUSE_X]+xoffs));
		float ty = (y-(Input->Mouse[MOUSE_Y]+yoffs));
		float factor = (tx*tx)+(ty*ty);
		if ( factor < 0 ) return true;
		else return Sqrt(factor) < radius;
	}
}